// import the CSS framework
@import "foundation";

// override for the 'Home' navigation link
.top-bar .name {
  font-size: rem-calc(13);
  line-height: 45px; }
.top-bar .name a {
  font-weight: normal;
  color: white;
  padding: 0 15px; }

// THESE ARE EXAMPLES YOU CAN MODIFY
// create mixins using Foundation classes
@mixin twelve-columns {
  @extend .small-12;
  @extend .columns;
  }
@mixin six-columns-centered {
  @extend .small-6;
  @extend .columns;
  @extend .text-center;
  }
// create your own classes
// to make views framework-neutral
.column {
  @include six-columns-centered;
  }
.form {
  @include grid-column(6);
  }
.form-centered {
  @include six-columns-centered;
  }
.submit {
  @extend .button;
  @extend .radius;
  }
// apply styles to HTML elements
// to make views framework-neutral
main {
  @include twelve-columns;
  background-color: #eee;
  }
section {
  @extend .row;
  margin-top: 20px;
  }

// Styles for form views
// using Foundation
// generated by the rails_layout gem
.authform {
  padding-top: 30px;
  max-width: 340px;
  margin: 0 auto;
}
.authform form {
  @include panel();
  padding-bottom: 60px;
}
.authform form a {
  font-size: rem-calc(13);
}
.authform form p {
  font-size: rem-calc(13);
}
.authform .form-group {
  // for Bootstrap, not used for Foundation
}
.authform .form-control {
  // for Bootstrap, not used for Foundation
}
.authform .checkbox {
  // for Bootstrap, not used for Foundation
}
.authform fieldset {
  @include panel();
}
.authform #error_explanation {
  @extend .alert-box;
  @extend .alert;
}

.alert-box {
  margin: 0;
  font-family: "brandon-grotesque";
  font-size: 16px;
  letter-spacing: .5px;
}

.alert-box.alert {
  margin: 0;
}
.alert-box.notice, .alert-box.success {
  border: none;
  text-align: center;
}
.alert-box.notice {
  background: #00AEFF;
}
.alert-box.success {
  background: #37B8B7;
}
.alert-box .close {
  top: 55%;
}
.authform #error_explanation h2 {
  font-size: rem-calc(16);
  color: white;
}
.button-xs {
  @extend .button;
  @extend .radius;
  @extend .tiny;
}

// We use this to control the maximum blocks and spacing
$block-grid-elements: 12;
$block-grid-default-spacing: rem-calc(20);
$align-block-grid-to-grid: false; //removes column gutter so edges of block grid align with grid

// Enables media queries for block-grid classes. Set to false if writing semantic HTML.
$block-grid-media-queries: true;

// $row-width: 100%;
